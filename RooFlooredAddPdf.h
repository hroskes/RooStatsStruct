/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROOFLOOREDADDPDF
#define ROOFLOOREDADDPDF


#include "RooAddPdf.h"

using namespace RooFit;

class RooFlooredAddPdf : public RooAddPdf {
public:

        RooFlooredAddPdf();
        RooFlooredAddPdf(const char *name, const char *title = 0);
        RooFlooredAddPdf(const char *name, const char *title, RooAbsPdf &pdf1, RooAbsPdf &pdf2, RooAbsReal &coef1);
        RooFlooredAddPdf(const char *name, const char *title, const RooArgList &pdfList);
        RooFlooredAddPdf(const char *name, const char *title, const RooArgList &pdfList, const RooArgList &coefList, Bool_t recursiveFraction=kFALSE);
        RooFlooredAddPdf(const RooFlooredAddPdf& other, const char* name = 0);
        virtual TObject* clone(const char* newname) const { return new RooFlooredAddPdf(*this, newname); }
        virtual ~RooFlooredAddPdf();

        Double_t evaluate() const;
        Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const;

        constexpr static const double floor = 1e-18;

protected:

        Bool_t _doFloor;
        Double_t _floor;

private:

        ClassDef(RooFlooredAddPdf, 1) // PDF constructed from a sum of (non-pdf) functions
};


#endif
